version: '3.8'

services:
  backend:
    image: backend:latest
    container_name: trading-backend
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=sqlite:///data/trading.db
      - CORS_ORIGINS=http://localhost,https://${DOMAIN_NAME:-localhost}
      - LOG_LEVEL=INFO
      - INITIAL_BALANCE=100000.0
      - MAX_POSITION_SIZE=0.05
      - ENABLE_SCHEDULER=true
      - SECRET_KEY=${SECRET_KEY:-change-me-in-production}
      - NEWS_API_KEY=${NEWS_API_KEY:-}
      - ALPHA_VANTAGE_KEY=${ALPHA_VANTAGE_KEY:-}
    volumes:
      - backend_data:/app/data
      - backend_logs:/app/logs
    networks:
      - trading_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s
    depends_on:
      - scheduler

  frontend:
    image: frontend:latest
    container_name: trading-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    ports:
      - "80:80"
    networks:
      - trading_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 90s
    depends_on:
      - backend

  scheduler:
    image: backend:latest
    container_name: trading-scheduler
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=sqlite:///data/trading.db
      - LOG_LEVEL=INFO
      - ENABLE_SCHEDULER=true
      - NEWS_API_KEY=${NEWS_API_KEY:-}
      - ALPHA_VANTAGE_KEY=${ALPHA_VANTAGE_KEY:-}
    volumes:
      - backend_data:/app/data
      - backend_logs:/app/logs
    networks:
      - trading_network
    command: ["python", "scheduler.py"]
    healthcheck:
      test: ["CMD", "pgrep", "-f", "scheduler.py"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 60s


volumes:
  backend_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/trading/data
  backend_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/trading/logs

networks:
  trading_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16